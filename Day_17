
CONTAINER WITH MOST WATER 

public static int storeWater(ArrayList<Integer> height){
        int MaxWater = 0;
        int lp = 0;
        int rp=height.size()-1;

        while(lp < rp){
            int ht = Math.min(height.get(lp) , height.get(rp));
            int width = rp -lp;
            int currWater = ht * width;
            MaxWater = Math.max(MaxWater, currWater);

            if(height.get(lp) < height.get(rp)){
                lp++;
            }else{
                rp--;
            }
        }
        return MaxWater;
}
public static void main(String[] args) {
    ArrayList<Integer>height = new ArrayList<>();
    height.add(1);
    height.add(8);
    height.add(6);
    height.add(2);
    height.add(5);
    height.add(4);
    height.add(8);
    height.add(3);
    height.add(7);
    System.out.println(storeWater(height));
}


public static void main(String[] args) {
        ArrayList<Integer>height = new ArrayList<>();
        height.add(1);
        height.add(8);
        height.add(6);
        height.add(2);
        height.add(5);
        height.add(4);
        height.add(8);
        height.add(3);
        height.add(7);
        System.out.println(storeWater(height));
    }
}
-------------------------------------------------------------
TARGET 2 PAIR SUM
public static boolean targetSum(ArrayList<Integer>height , int target){
    int lp= 0;
    int rp = height.size()-1;
    while(lp < rp){
        
        if(height.get(lp) + height.get(rp) == target){
            return true;
        }else if(height.get(lp) + height.get(rp) < target){
            lp++;
        }else
        rp--;
    }
    return false;
}
public static void main(String[] args) {
        ArrayList<Integer>height = new ArrayList<>();
        height.add(1);
        height.add(2);
        height.add(3);
        height.add(4);
        height.add(5);
        int target = 5;
        System.out.println(targetSum(height, target));
    }


}
